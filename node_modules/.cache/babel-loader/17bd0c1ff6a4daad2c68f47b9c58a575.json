{"ast":null,"code":"import _classCallCheck from \"/home/ivan/Desktop/www/widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ivan/Desktop/www/widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ivan/Desktop/www/widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ivan/Desktop/www/widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ivan/Desktop/www/widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/home/ivan/Desktop/www/widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/ivan/Desktop/www/widget/src/Components/InputPage/InputPage.js\";\nimport React, { Component } from 'react';\nimport Select from \"react-select\";\nimport Autocomplete from 'react-google-autocomplete';\nimport { MainConsumer } from \"../../contexts/ContextMain\";\nimport './InputPage.css';\nvar customStyles = {\n  option: function option(provided, state) {\n    return _objectSpread({}, provided);\n  },\n  control: function control() {\n    return {// none of react-select's styles are passed to <Control />\n      // width: 200,\n    };\n  } // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = \"opacity 300ms\";\n  //   return { ...provided, opacity, transition };\n  // },\n\n};\nvar isError = false;\nvar options;\n\nvar InputPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputPage, _Component);\n\n  function InputPage() {\n    _classCallCheck(this, InputPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InputPage).apply(this, arguments));\n  }\n\n  _createClass(InputPage, [{\n    key: \"render\",\n    // handleOnChangeSlecet = (e) => {\n    // }\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(MainConsumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, function (_ref) {\n        var countryState = _ref.countryState,\n            countriesList = _ref.countriesList,\n            handleOnChangeInputDestination = _ref.handleOnChangeInputDestination,\n            handleGetQuote = _ref.handleGetQuote;\n\n        if (countriesList) {\n          options = countriesList.map(function (country) {\n            return {\n              value: country.id,\n              label: country.name\n            };\n          });\n        }\n\n        return React.createElement(\"div\", {\n          className: \"main-delivery-input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, countryState.type === \"D\" ? React.createElement(Autocomplete, {\n          style: {\n            width: \"80%\"\n          },\n          onPlaceSelected: function onPlaceSelected(place) {\n            handleOnChangeInputDestination(place);\n          },\n          types: [\"(regions)\"],\n          componentRestrictions: {\n            country: \"us\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }) : React.createElement(Select, {\n          options: options,\n          onChange: _this.handleOnChangeSlecet // styles={customStyles}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, isError ? \"This field cannot be blank\" : \"\"));\n      });\n    }\n  }]);\n\n  return InputPage;\n}(Component);\n\nexport default InputPage;","map":{"version":3,"sources":["/home/ivan/Desktop/www/widget/src/Components/InputPage/InputPage.js"],"names":["React","Component","Select","Autocomplete","MainConsumer","customStyles","option","provided","state","control","isError","options","InputPage","countryState","countriesList","handleOnChangeInputDestination","handleGetQuote","map","country","value","id","label","name","type","width","place","handleOnChangeSlecet"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAO,iBAAP;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,gBAACC,QAAD,EAAWC,KAAX;AAAA,6BACHD,QADG;AAAA,GADW;AAOnBE,EAAAA,OAAO,EAAE;AAAA,WAAO,CACd;AACA;AAFc,KAAP;AAAA,GAPU,CAWnB;AACA;AACA;AAEA;AACA;;AAhBmB,CAArB;AAmBA,IAAIC,OAAO,GAAG,KAAd;AACA,IAAIC,OAAJ;;IACMC,S;;;;;;;;;;;;;AACJ;AAEA;6BACS;AAAA;;AACP,aACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAKK;AAAA,YAJJC,YAII,QAJJA,YAII;AAAA,YAHJC,aAGI,QAHJA,aAGI;AAAA,YAFJC,8BAEI,QAFJA,8BAEI;AAAA,YADJC,cACI,QADJA,cACI;;AACJ,YAAIF,aAAJ,EAAmB;AACjBH,UAAAA,OAAO,GAAGG,aAAa,CAACG,GAAd,CAAkB,UAAAC,OAAO;AAAA,mBAAK;AACtCC,cAAAA,KAAK,EAAED,OAAO,CAACE,EADuB;AAEtCC,cAAAA,KAAK,EAAEH,OAAO,CAACI;AAFuB,aAAL;AAAA,WAAzB,CAAV;AAID;;AAED,eACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGT,YAAY,CAACU,IAAb,KAAsB,GAAtB,GACC,oBAAC,YAAD;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WADT;AAEE,UAAA,eAAe,EAAE,yBAAAC,KAAK,EAAI;AACxBV,YAAAA,8BAA8B,CAACU,KAAD,CAA9B;AACD,WAJH;AAKE,UAAA,KAAK,EAAE,CAAC,WAAD,CALT;AAME,UAAA,qBAAqB,EAAE;AAAEP,YAAAA,OAAO,EAAE;AAAX,WANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,GAUC,oBAAC,MAAD;AACE,UAAA,OAAO,EAAEP,OADX;AAEE,UAAA,QAAQ,EAAE,KAAI,CAACe,oBAFjB,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXJ,CADF,EAmBE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGhB,OAAO,GAAG,4BAAH,GAAkC,EAD5C,CAnBF,CADF;AAyBD,OAvCH,CADF;AA2CD;;;;EAhDqBT,S;;AAmDxB,eAAeW,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Select from \"react-select\";\nimport Autocomplete from 'react-google-autocomplete';\nimport { MainConsumer } from \"../../contexts/ContextMain\";\nimport './InputPage.css';\n\nconst customStyles = {\n  option: (provided, state) => ({\n    ...provided,\n    // borderBottom: \"1px dotted pink\",\n    // color: state.isSelected ? \"red\" : \"blue\",\n    // padding: 20,\n  }),\n  control: () => ({\n    // none of react-select's styles are passed to <Control />\n    // width: 200,\n  }),\n  // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = \"opacity 300ms\";\n\n  //   return { ...provided, opacity, transition };\n  // },\n};\n\nlet isError = false;\nlet options;\nclass InputPage extends Component {\n  // handleOnChangeSlecet = (e) => {\n    \n  // }\n  render() {\n    return (\n      <MainConsumer>\n        {({\n          countryState,\n          countriesList,\n          handleOnChangeInputDestination,\n          handleGetQuote,\n        }) => {\n          if (countriesList) {\n            options = countriesList.map(country => ({\n              value: country.id,\n              label: country.name,\n            }));\n          }\n\n          return (\n            <div className=\"main-delivery-input\">\n              <form>\n                {countryState.type === \"D\" ? (\n                  <Autocomplete\n                    style={{ width: \"80%\" }}\n                    onPlaceSelected={place => {\n                      handleOnChangeInputDestination(place);\n                    }}\n                    types={[\"(regions)\"]}\n                    componentRestrictions={{ country: \"us\" }}\n                  />\n                ) : (\n                  <Select\n                    options={options}\n                    onChange={this.handleOnChangeSlecet}\n                    // styles={customStyles}\n                  />\n                )}\n              </form>\n              <div className=\"text-danger\">\n                {isError ? \"This field cannot be blank\" : \"\"}\n              </div>\n            </div>\n          );\n        }}\n      </MainConsumer>\n    );\n  }\n}\n\nexport default InputPage;"]},"metadata":{},"sourceType":"module"}